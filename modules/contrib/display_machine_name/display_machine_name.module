<?php

/**
 * @file
 * Contains display_machine_name.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;

const DISPLAY_MACHINE_NAME_ENABLED_ID = 'enable_display_machine_name';

/**
 * Implements hook_help().
 */
function display_machine_name_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the display_machine_name module.
    case 'help.page.display_machine_name':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Display the machine name on the form/view display edit form. Useful for distinguishing between fields with the same label.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Alter the entity view/form display edit form.
 */
function display_machine_name_form_entity_form_view_display_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $display = $form_state->getFormObject()->getEntity();

  $show_machine_name = $display->getThirdPartySetting('display_machine_name', DISPLAY_MACHINE_NAME_ENABLED_ID, 0);

  $form[DISPLAY_MACHINE_NAME_ENABLED_ID] = [
    '#type' => 'checkbox',
    '#title' => t('Display machine names'),
    '#description' => t('Check this box to enable the display of machine names on labels.'),
    '#default_value' => $show_machine_name,
  ];

  if ($show_machine_name === 1) {
    $name_service = \Drupal::service('display_machine_name.general_service');
    $name_service->alterFormDisplayMachineName($form);
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function display_machine_name_form_entity_view_display_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  display_machine_name_form_entity_form_view_display_edit_form_alter($form, $form_state, $form_id);

  $form['actions']['submit']['#submit'][] = 'display_machine_name_view_display_submit';
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function display_machine_name_form_entity_form_display_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  display_machine_name_form_entity_form_view_display_edit_form_alter($form, $form_state, $form_id);
  $form['actions']['submit']['#submit'][] = 'display_machine_name_form_display_submit';
}

/**
 * Custom form display submit handler.
 */
function display_machine_name_form_display_submit(array &$form, FormStateInterface $form_state) {
  display_machine_name_set_display_submit($form, $form_state, 'entity_form_display');
}

/**
 * Custom view display submit handler.
 */
function display_machine_name_view_display_submit(array &$form, FormStateInterface $form_state) {
  display_machine_name_set_display_submit($form, $form_state, 'entity_view_display');
}

/**
 * Set the display after submit.
 */
function display_machine_name_set_display_submit(&$form, FormStateInterface $form_state, $storage) {
  $machine_names_enabled = $form_state->getValue(DISPLAY_MACHINE_NAME_ENABLED_ID);
  $form_display = $form_state->getFormObject()->getEntity();

  $name_service = \Drupal::service('display_machine_name.general_service');
  $name_service->enableDisplayMachineName($form_display, $machine_names_enabled);
}

/**
 * Implements hook_module_implements_alter().
 */
function display_machine_name_module_implements_alter(&$implementations, $hook) {
  // var_dump($hook);
  // Put our alter after all others e.g. field_group.
  if ($hook == 'form_entity_form_display_edit_form_alter' ||
    $hook == 'form_alter') {
    if (isset($implementations['display_machine_name'])) {
      $group = $implementations['display_machine_name'];
      unset($implementations['display_machine_name']);
      $implementations['display_machine_name'] = $group;
    }
  }
}
